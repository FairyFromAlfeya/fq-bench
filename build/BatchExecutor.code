.version sol 0.62.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDREF
LDREF
LDREF
ENDS
CTOS
LDREF
LDREF
LDMSGADDR
ENDS
.loc ../contracts/BatchExecutor.tsol, 52
ACCEPT
.loc ../contracts/BatchExecutor.tsol, 53
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/BatchExecutor.tsol, 55
ROLL 5
SETGLOB 11
.loc ../contracts/BatchExecutor.tsol, 56
ROLL 4
SETGLOB 13
.loc ../contracts/BatchExecutor.tsol, 57
ROLL 3
SETGLOB 14
.loc ../contracts/BatchExecutor.tsol, 58
ROT
SETGLOB 15
.loc ../contracts/BatchExecutor.tsol, 59
SWAP
SETGLOB 16
.loc ../contracts/BatchExecutor.tsol, 61
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro batchTokenRootDeploy
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/BatchExecutor.tsol, 76
OVER
PUSHCONT {
	LDU 8
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 32
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 8
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 32
}
IFELSE
LDMSGADDR
ENDS
.loc ../contracts/BatchExecutor.tsol, 0
CALLREF {
	CALL $batchTokenRootDeploy_e7197884_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro batchTokenRootDeploy_e7197884_internal_macro
.loc ../contracts/BatchExecutor.tsol, 22
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
THROWIFNOT 100
.loc ../contracts/BatchExecutor.tsol, 24
GETGLOB 9
MYADDR
SDEQ
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 25
	FALSE
	.loc ../contracts/BatchExecutor.tsol, 27
	GETGLOB 11
	SECOND
	PUSHINT 0
	NULL
	PUSHCONT {
		PUSH2 S1, S2
		PUSHINT 32
		DICTUGET
		NULLSWAPIFNOT
		DROP
		DUP
		POP S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc ../contracts/BatchExecutor.tsol, 28
		GETGLOB 9
		OVER
		SDEQ
		PUSHCONT {
			.loc ../contracts/BatchExecutor.tsol, 29
			TRUE
			POP S4
			.loc ../contracts/BatchExecutor.tsol, 0
		}
		IF
		.loc ../contracts/BatchExecutor.tsol, 0
		OVER
		INC
		POP S2
	}
	WHILE
	BLKDROP 3
	.loc ../contracts/BatchExecutor.tsol, 33
	THROWIFNOT 100
	.loc ../contracts/BatchExecutor.tsol, 0
}
IFNOT
.loc ../contracts/BatchExecutor.tsol, 40
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/BatchExecutor.tsol, 82
PUSH S2
FIRST
.loc ../contracts/BatchExecutor.tsol, 83
PUSH S2
ADDCONST 20
UFITS 32
OVER
MIN
.loc ../contracts/BatchExecutor.tsol, 85
ROLL 3
PUSHCONT {
	PUSH2 S0, S1
	LESS
}
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 86
	PUSH3 S5, S0, S4
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	CALLREF {
		LDREF
		LDREF
		LDU 8
		ENDS
		TRIPLE
	}
	PUSH S5
	CALLREF {
		CALL $_tokenRootDeployInternal_b2570049_internal_macro$
	}
	.loc ../contracts/BatchExecutor.tsol, 85
	INC
	.loc ../contracts/BatchExecutor.tsol, 0
}
WHILE
DROP
.loc ../contracts/BatchExecutor.tsol, 89
DUP
ROT
LESS
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 90
	DUP2
	UFITS 32
	PUSH2 S4, S5
	MYADDR
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	STSLICECONST x1_
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 4
	NEWC
	STSLICECONST x78da2e9f
	STU 8
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	STU 32
	STSLICE
	STBREFR
}
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 97
	OVER
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
}
IFELSE
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 0
BLKDROP 4

.globl	_tokenRootDeployInternal_b2570049_internal
.type	_tokenRootDeployInternal_b2570049_internal, @function
CALL $_tokenRootDeployInternal_b2570049_internal_macro$

.macro _tokenRootDeployInternal_b2570049_internal_macro
.loc ../contracts/BatchExecutor.tsol, 106
FALSE
BLKPUSH 4, 0
MYADDR
PUSHINT 0
NEWC
STU 256
PUSHINT 0
NEWDICT
PUSHINT 64
DICTUSETB
GETGLOB 12
NEWC
STU 256
PUSHINT 6
ROT
PUSHINT 64
DICTUSETB
MYADDR
PUSHINT 7
ROT
PUSHINT 64
DICTUSET
PUSH S8
FIRST
PUSHINT 1
ROT
PUSHINT 64
DICTUSETREF
PUSH S8
SECOND
PUSHINT 2
ROT
PUSHINT 64
DICTUSETREF
PUSH S8
THIRD
NEWC
STU 8
PUSHINT 3
ROT
PUSHINT 64
DICTUSETB
GETGLOB 15
PUSHINT 5
ROT
PUSHINT 64
DICTUSETREF
GETGLOB 13
PUSHINT 8
ROT
PUSHINT 64
DICTUSETREF
MYADDR
PUSHINT 4
ROT
PUSHINT 64
DICTUSET
NEWC
STDICT
ENDC
GETGLOB 14
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
ROLLREV 8
PUSH S8
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 3030982065060147937779331799513237188247555
STUR 143
OVER
CALLREF {
	CTOS
	LDI 1
	SWAP
	PUSHCONT {
		LDI 5
		NIP
	}
	IF
	LDI 1
	SWAP
	PUSHCONT {
		LDI 2
		NIP
	}
	IF
	LDOPTREF
	LDOPTREF
	LDDICT
	ENDS
	BLKDROP 3
}
STREF
STSLICECONST 1
ROLLREV 7
NEWC
STSLICECONST x0a23e69c
STSLICE
STU 128
STU 128
STI 1
STI 1
STI 1
SWAP
NEWC
STSLICE
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 131
SWAP
SECOND
XCHG S2
PUSHSLICE xc00000000000000000000000000b410ced
NEWC
STSLICE
STU 8
STSLICE
STREF
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 133
GETGLOB 12
INC
SETGLOB 12
.loc ../contracts/BatchExecutor.tsol, 0

.macro batchEverWalletDeploy
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/BatchExecutor.tsol, 143
OVER
PUSHCONT {
	LDU 8
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 256
	LDU 32
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 8
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 256
	LDU 32
}
IFELSE
LDMSGADDR
ENDS
.loc ../contracts/BatchExecutor.tsol, 0
CALLREF {
	CALL $batchEverWalletDeploy_afdbc560_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro batchEverWalletDeploy_afdbc560_internal_macro
.loc ../contracts/BatchExecutor.tsol, 22
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
THROWIFNOT 100
.loc ../contracts/BatchExecutor.tsol, 24
GETGLOB 9
MYADDR
SDEQ
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 25
	FALSE
	.loc ../contracts/BatchExecutor.tsol, 27
	GETGLOB 11
	SECOND
	PUSHINT 0
	NULL
	PUSHCONT {
		PUSH2 S1, S2
		PUSHINT 32
		DICTUGET
		NULLSWAPIFNOT
		DROP
		DUP
		POP S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc ../contracts/BatchExecutor.tsol, 28
		GETGLOB 9
		OVER
		SDEQ
		PUSHCONT {
			.loc ../contracts/BatchExecutor.tsol, 29
			TRUE
			POP S4
			.loc ../contracts/BatchExecutor.tsol, 0
		}
		IF
		.loc ../contracts/BatchExecutor.tsol, 0
		OVER
		INC
		POP S2
	}
	WHILE
	BLKDROP 3
	.loc ../contracts/BatchExecutor.tsol, 33
	THROWIFNOT 100
	.loc ../contracts/BatchExecutor.tsol, 0
}
IFNOT
.loc ../contracts/BatchExecutor.tsol, 40
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/BatchExecutor.tsol, 150
PUSH S3
FIRST
.loc ../contracts/BatchExecutor.tsol, 151
PUSH S2
ADDCONST 20
UFITS 32
OVER
MIN
.loc ../contracts/BatchExecutor.tsol, 153
ROLL 3
PUSHCONT {
	PUSH2 S0, S1
	LESS
}
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 154
	PUSH3 S6, S0, S5
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	CALLREF {
		LDU 128
		LDU 64
		ENDS
		PAIR
	}
	PUSH S6
	CALLREF {
		CALL $_everWalletDeployInternal_284da496_internal_macro$
	}
	.loc ../contracts/BatchExecutor.tsol, 153
	INC
	.loc ../contracts/BatchExecutor.tsol, 0
}
WHILE
DROP
.loc ../contracts/BatchExecutor.tsol, 157
DUP
ROT
LESS
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 158
	DUP2
	UFITS 32
	PUSH3 S4, S5, S6
	MYADDR
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	STSLICECONST x1_
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 5
	NEWC
	STSLICECONST x0700e0d6
	STU 8
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	STU 256
	STU 32
	STSLICE
	STBREFR
}
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 165
	OVER
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
}
IFELSE
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 0
BLKDROP 5

.globl	_everWalletDeployInternal_284da496_internal
.type	_everWalletDeployInternal_284da496_internal, @function
CALL $_everWalletDeployInternal_284da496_internal_macro$

.macro _everWalletDeployInternal_284da496_internal_macro
.loc ../contracts/BatchExecutor.tsol, 174
OVER
SECOND
OVER
NEWC
STU 256
STU 64
ENDC
.loc ../contracts/BatchExecutor.tsol, 176
GETGLOB 16
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
.loc ../contracts/BatchExecutor.tsol, 177
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
.loc ../contracts/BatchExecutor.tsol, 179
PUSH S3
FIRST
OVER
NEWC
STSLICECONST x42_
STSLICE
SWAP
STGRAMS
PUSHINT 3
STUR 107
ROT
DUP
CALLREF {
	CTOS
	LDI 1
	SWAP
	PUSHCONT {
		LDI 5
		NIP
	}
	IF
	LDI 1
	SWAP
	PUSHCONT {
		LDI 2
		NIP
	}
	IF
	LDOPTREF
	LDOPTREF
	LDDICT
	ENDS
	BLKDROP 3
}
STREFR
STSLICECONST 0
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 186
SWAP2
SECOND
SWAP2
PUSHSLICE xc0000000000000000000000001
NEWC
STSLICE
ROLLREV 4
NEWC
STSLICECONST x14ed4394
STSLICE
STU 256
STU 64
STU 8
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 0

.macro batchMint
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/BatchExecutor.tsol, 191
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 128
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 32
LDREF
ENDS
CTOS
LDMSGADDR
ENDS
.loc ../contracts/BatchExecutor.tsol, 0
CALLREF {
	CALL $batchMint_90a58274_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro batchMint_90a58274_internal_macro
.loc ../contracts/BatchExecutor.tsol, 22
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
THROWIFNOT 100
.loc ../contracts/BatchExecutor.tsol, 24
GETGLOB 9
MYADDR
SDEQ
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 25
	FALSE
	.loc ../contracts/BatchExecutor.tsol, 27
	GETGLOB 11
	SECOND
	PUSHINT 0
	NULL
	PUSHCONT {
		PUSH2 S1, S2
		PUSHINT 32
		DICTUGET
		NULLSWAPIFNOT
		DROP
		DUP
		POP S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc ../contracts/BatchExecutor.tsol, 28
		GETGLOB 9
		OVER
		SDEQ
		PUSHCONT {
			.loc ../contracts/BatchExecutor.tsol, 29
			TRUE
			POP S4
			.loc ../contracts/BatchExecutor.tsol, 0
		}
		IF
		.loc ../contracts/BatchExecutor.tsol, 0
		OVER
		INC
		POP S2
	}
	WHILE
	BLKDROP 3
	.loc ../contracts/BatchExecutor.tsol, 33
	THROWIFNOT 100
	.loc ../contracts/BatchExecutor.tsol, 0
}
IFNOT
.loc ../contracts/BatchExecutor.tsol, 40
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/BatchExecutor.tsol, 198
PUSH S2
FIRST
UFITS 32
PUSH S5
PUSHSLICE xc00000000000000000000000001e67f434
NEWC
STSLICE
STSLICE
STU 32
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 200
ROLLREV 4
XCHG S3
FALSE
NEWC
STSLICECONST x6_
STI 1
STSLICECONST x1_
STSLICE
PUSHINT 1
STUR 111
ROLLREV 4
NEWC
STSLICECONST x49577d6f
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
STU 128
STU 32
STSLICE
STBREFR
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 0

.macro addOwners
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/BatchExecutor.tsol, 213
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
.loc ../contracts/BatchExecutor.tsol, 0
CALLREF {
	CALL $addOwners_6c46a2c5_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro addOwners_6c46a2c5_internal_macro
.loc ../contracts/BatchExecutor.tsol, 22
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
THROWIFNOT 100
.loc ../contracts/BatchExecutor.tsol, 24
GETGLOB 9
MYADDR
SDEQ
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 25
	FALSE
	.loc ../contracts/BatchExecutor.tsol, 27
	GETGLOB 11
	SECOND
	PUSHINT 0
	NULL
	PUSHCONT {
		PUSH2 S1, S2
		PUSHINT 32
		DICTUGET
		NULLSWAPIFNOT
		DROP
		DUP
		POP S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc ../contracts/BatchExecutor.tsol, 28
		GETGLOB 9
		OVER
		SDEQ
		PUSHCONT {
			.loc ../contracts/BatchExecutor.tsol, 29
			TRUE
			POP S4
			.loc ../contracts/BatchExecutor.tsol, 0
		}
		IF
		.loc ../contracts/BatchExecutor.tsol, 0
		OVER
		INC
		POP S2
	}
	WHILE
	BLKDROP 3
	.loc ../contracts/BatchExecutor.tsol, 33
	THROWIFNOT 100
	.loc ../contracts/BatchExecutor.tsol, 0
}
IFNOT
.loc ../contracts/BatchExecutor.tsol, 40
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/BatchExecutor.tsol, 214
SECOND
PUSHINT 0
NULL
PUSHCONT {
	PUSH2 S1, S2
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	DROP
	DUP
	POP S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 215
	DUP
	GETGLOB 11
	UNPAIR
	OVER
	INC
	ROLLREV 3
	PUSHINT 32
	DICTUSET
	PAIR
	SETGLOB 11
	.loc ../contracts/BatchExecutor.tsol, 0
	OVER
	INC
	POP S2
}
WHILE
BLKDROP 3
.loc ../contracts/BatchExecutor.tsol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDU 64
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 256
LDREF
LDREF
LDREF
ENDS
CTOS
LDREF
LDREF
ENDS
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 1
	OVER
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 64
	}
	IF
	PUSHINT 0
	NEWDICT
	PAIR
	PUSHINT 0
	PUSHREF {
	}
	BLKPUSH 3, 0
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0
	SETGLOB 12
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STU 64
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
STU 256
STREF
STREF
ROTREV
NEWC
STREF
STREF
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
IF
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro public_function_selector
DUP
PUSHINT 1677285849
LEQ
IFJMPREF {
	DUP
	PUSHINT 117498070
	EQUAL
	IFJMPREF {
		CALL $batchEverWalletDeploy$
	}
	DUP
	PUSHINT 1008940179
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 1527307521
	EQUAL
	IFJMPREF {
		CALL $batchMint$
	}
	DUP
	PUSHINT 1677285849
	EQUAL
	IFJMPREF {
		CALL $addOwners$
	}
}
DUP
PUSHINT 2027564703
EQUAL
IFJMPREF {
	CALL $batchTokenRootDeploy$
}


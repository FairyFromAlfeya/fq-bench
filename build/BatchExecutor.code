.version sol 0.62.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
LDREF
LDREF
LDREF
LDREF
ENDS
CTOS
LDREF
LDREF
LDREF
LDREF
ENDS
CTOS
LDREF
LDREF
LDREF
LDREF
ENDS
CTOS
LDREF
LDREF
LDMSGADDR
ENDS
.loc ../contracts/BatchExecutor.tsol, 52
ACCEPT
.loc ../contracts/BatchExecutor.tsol, 53
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/BatchExecutor.tsol, 55
ROLL 11
SETGLOB 11
.loc ../contracts/BatchExecutor.tsol, 56
ROLL 10
SETGLOB 12
.loc ../contracts/BatchExecutor.tsol, 57
ROLL 9
SETGLOB 13
.loc ../contracts/BatchExecutor.tsol, 59
ROLL 8
SETGLOB 15
.loc ../contracts/BatchExecutor.tsol, 61
ROLL 7
SETGLOB 16
.loc ../contracts/BatchExecutor.tsol, 62
ROLL 6
SETGLOB 17
.loc ../contracts/BatchExecutor.tsol, 63
ROLL 5
SETGLOB 18
.loc ../contracts/BatchExecutor.tsol, 64
ROLL 4
SETGLOB 19
.loc ../contracts/BatchExecutor.tsol, 65
ROLL 3
SETGLOB 20
.loc ../contracts/BatchExecutor.tsol, 66
ROT
SETGLOB 21
.loc ../contracts/BatchExecutor.tsol, 67
SWAP
SETGLOB 22
.loc ../contracts/BatchExecutor.tsol, 69
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro deployDex
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/BatchExecutor.tsol, 78
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/BatchExecutor.tsol, 0
CALLREF {
	CALL $deployDex_b0997e4f_internal_macro$
}
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro deployDex_b0997e4f_internal_macro
.loc ../contracts/BatchExecutor.tsol, 34
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/BatchExecutor.tsol, 79
MYADDR
.loc ../contracts/BatchExecutor.tsol, 80
PUSHINT 0
.loc ../contracts/BatchExecutor.tsol, 82
OVER
PUSHINT 0
NEWC
STU 256
PUSHINT 0
NEWDICT
PUSHINT 64
DICTUSETB
PUSH S2
NEWC
STU 32
PUSHINT 1
ROT
PUSHINT 64
DICTUSETB
NEWC
STDICT
ENDC
GETGLOB 16
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
ROTREV
PUSH S2
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 3112111703474754619475120804657301188247555
STUR 143
OVER
CALLREF {
	CTOS
	LDI 1
	SWAP
	PUSHCONT {
		LDI 5
		NIP
	}
	IF
	LDI 1
	SWAP
	PUSHCONT {
		LDI 2
		NIP
	}
	IF
	LDOPTREF
	LDOPTREF
	LDDICT
	ENDS
	BLKDROP 3
}
STREF
STSLICECONST 1
SWAP
NEWC
STSLICECONST x475654dc
STSLICE
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 90
GETGLOB 12
OVER
FALSE
NEWC
STSLICECONST x6_
STI 1
STSLICECONST x1_
STSLICE
PUSHINT 12321070556741797692511081747621921145552344982095006
STUR 175
STREF
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 91
GETGLOB 13
OVER
FALSE
NEWC
STSLICECONST x6_
STI 1
STSLICECONST x1_
STSLICE
PUSHINT 12321070556741797692511081747621921145552345303475084
STUR 175
STREF
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 92
GETGLOB 11
OVER
FALSE
NEWC
STSLICECONST x6_
STI 1
STSLICECONST x1_
STSLICE
PUSHINT 12321070556741797692511081747621921145552343987247506
STUR 175
STREF
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 94
PUSH S2
ROLL 3
PUSHINT 0
NEWC
STU 256
PUSHINT 0
NEWDICT
PUSHINT 64
DICTUSETB
ROLL 4
NEWC
STU 32
PUSHINT 1
ROT
PUSHINT 64
DICTUSETB
NEWC
STDICT
ENDC
GETGLOB 17
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
ROLLREV 3
PUSH S3
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 3112111703474754619475120804657301188247555
STUR 143
OVER
CALLREF {
	CTOS
	LDI 1
	SWAP
	PUSHCONT {
		LDI 5
		NIP
	}
	IF
	LDI 1
	SWAP
	PUSHCONT {
		LDI 2
		NIP
	}
	IF
	LDOPTREF
	LDOPTREF
	LDDICT
	ENDS
	BLKDROP 3
}
STREF
STSLICECONST 1
ROTREV
NEWC
STSLICECONST x49fa7cdf
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 102
GETGLOB 18
OVER
FALSE
NEWC
STSLICECONST x6_
STI 1
STSLICECONST x1_
STSLICE
PUSHINT 12321070556741797692511081747621921145552345537043538
STUR 175
STREF
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 103
PUSHINT 1
GETGLOB 19
PUSH S2
FALSE
NEWC
STSLICECONST x6_
STI 1
STSLICECONST x1_
STSLICE
PUSHINT 12321070556741797692511081747621921145552343708692244
STUR 175
STREF
STU 8
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 104
PUSH S2
GETGLOB 21
PUSH S2
FALSE
NEWC
STSLICECONST x6_
STI 1
STSLICECONST x1_
STSLICE
PUSHINT 2868722788230934574387753789225109188247553
STUR 143
ROTREV
NEWC
STSLICECONST x21bc6098
STREF
STSLICE
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 105
GETGLOB 20
OVER
FALSE
NEWC
STSLICECONST x6_
STI 1
STSLICECONST x1_
STSLICE
PUSHINT 12321070556741797692511081747621921145552344935275068
STUR 175
STREF
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 106
PUSH S2
GETGLOB 22
PUSH S2
FALSE
NEWC
STSLICECONST x6_
STI 1
STSLICECONST x1_
STSLICE
PUSHINT 2868722788230934574387753789225109188247553
STUR 143
ROTREV
NEWC
STSLICECONST x427c2618
STREF
STSLICE
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 107
BLKPUSH 3, 2
FALSE
NEWC
STSLICECONST x6_
STI 1
STSLICECONST x1_
STSLICE
PUSHINT 2868722788230934574387753789225109188247553
STUR 143
ROTREV
NEWC
STSLICECONST x4fa5ee8e
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 108
TRUE
OVER
FALSE
NEWC
STSLICECONST x6_
STI 1
STSLICECONST x1_
STSLICE
PUSHINT 12321070556741797692511081747621921145552344918445724
STUR 175
STI 1
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 110
SWAP
PUSHSLICE xc0000000000000000000000001
NEWC
STSLICE
ROTREV
NEWC
STSLICECONST x09e0800c
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 112
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 0

.macro batchTokenRootDeploy
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/BatchExecutor.tsol, 127
OVER
PUSHCONT {
	LDU 16
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 32
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 16
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 32
}
IFELSE
LDMSGADDR
ENDS
.loc ../contracts/BatchExecutor.tsol, 0
CALLREF {
	CALL $batchTokenRootDeploy_d38bc9c2_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro batchTokenRootDeploy_d38bc9c2_internal_macro
.loc ../contracts/BatchExecutor.tsol, 34
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/BatchExecutor.tsol, 133
PUSH S2
FIRST
.loc ../contracts/BatchExecutor.tsol, 134
PUSH S2
ADDCONST 20
UFITS 32
OVER
MIN
.loc ../contracts/BatchExecutor.tsol, 135
MYADDR
.loc ../contracts/BatchExecutor.tsol, 137
ROLL 4
PUSHCONT {
	PUSH2 S0, S2
	LESS
}
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 138
	PUSH3 S6, S0, S5
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	CALLREF {
		LDREF
		LDREF
		LDU 8
		ENDS
		TRIPLE
	}
	PUSH2 S3, S6
	CALLREF {
		CALL $_tokenRootDeployInternal_ad7b9015_internal_macro$
	}
	.loc ../contracts/BatchExecutor.tsol, 137
	INC
	.loc ../contracts/BatchExecutor.tsol, 0
}
WHILE
DROP2
.loc ../contracts/BatchExecutor.tsol, 141
DUP
ROT
LESS
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 142
	DUP2
	UFITS 32
	PUSH2 S4, S5
	MYADDR
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	STSLICECONST x1_
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 4
	NEWC
	STSLICECONST x670b4994
	STU 16
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	STU 32
	STSLICE
	STBREFR
	ENDC
	PUSHPOW2 7
}
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 149
	OVER
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHPOW2 7
	ADDCONST 2
	UFITS 8
}
IFELSE
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 0
BLKDROP 4

.globl	_tokenRootDeployInternal_ad7b9015_internal
.type	_tokenRootDeployInternal_ad7b9015_internal, @function
CALL $_tokenRootDeployInternal_ad7b9015_internal_macro$

.macro _tokenRootDeployInternal_ad7b9015_internal_macro
.loc ../contracts/BatchExecutor.tsol, 163
FALSE
BLKPUSH 4, 0
PUSH S6
PUSHINT 0
NEWC
STU 256
PUSHINT 0
NEWDICT
PUSHINT 64
DICTUSETB
GETGLOB 14
NEWC
STU 256
PUSHINT 6
ROT
PUSHINT 64
DICTUSETB
PUSH S8
PUSHINT 7
ROT
PUSHINT 64
DICTUSET
PUSH S9
FIRST
PUSHINT 1
ROT
PUSHINT 64
DICTUSETREF
PUSH S9
SECOND
PUSHINT 2
ROT
PUSHINT 64
DICTUSETREF
PUSH S9
THIRD
NEWC
STU 8
PUSHINT 3
ROT
PUSHINT 64
DICTUSETB
GETGLOB 13
PUSHINT 5
ROT
PUSHINT 64
DICTUSETREF
GETGLOB 11
PUSHINT 8
ROT
PUSHINT 64
DICTUSETREF
ROLL 8
PUSHINT 4
ROT
PUSHINT 64
DICTUSET
NEWC
STDICT
ENDC
GETGLOB 12
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
ROLLREV 8
PUSH S8
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 3030982065060147937779331799513237188247555
STUR 143
OVER
CALLREF {
	CTOS
	LDI 1
	SWAP
	PUSHCONT {
		LDI 5
		NIP
	}
	IF
	LDI 1
	SWAP
	PUSHCONT {
		LDI 2
		NIP
	}
	IF
	LDOPTREF
	LDOPTREF
	LDDICT
	ENDS
	BLKDROP 3
}
STREF
STSLICECONST 1
ROLLREV 7
NEWC
STSLICECONST x0a23e69c
STSLICE
STU 128
STU 128
STI 1
STI 1
STI 1
SWAP
NEWC
STSLICE
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 188
SWAP
SECOND
XCHG S2
PUSHSLICE xc000000000000000000000000066a0dd1a
NEWC
STSLICE
STU 16
STSLICE
STREF
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 190
GETGLOB 14
INC
SETGLOB 14
.loc ../contracts/BatchExecutor.tsol, 0

.macro batchEverWalletDeploy
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/BatchExecutor.tsol, 200
OVER
PUSHCONT {
	LDU 16
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 256
	LDU 32
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 16
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 256
	LDU 32
}
IFELSE
LDMSGADDR
ENDS
.loc ../contracts/BatchExecutor.tsol, 0
CALLREF {
	CALL $batchEverWalletDeploy_4763995f_internal_macro$
}
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro batchEverWalletDeploy_4763995f_internal_macro
.loc ../contracts/BatchExecutor.tsol, 34
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/BatchExecutor.tsol, 207
PUSH S3
FIRST
.loc ../contracts/BatchExecutor.tsol, 208
PUSH S2
ADDCONST 20
UFITS 32
OVER
MIN
.loc ../contracts/BatchExecutor.tsol, 210
ROLL 3
PUSHCONT {
	PUSH2 S0, S1
	LESS
}
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 211
	PUSH3 S6, S0, S5
	SECOND
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	CALLREF {
		LDU 128
		LDU 64
		ENDS
		PAIR
	}
	PUSH S6
	CALLREF {
		CALL $_everWalletDeployInternal_9fc93571_internal_macro$
	}
	.loc ../contracts/BatchExecutor.tsol, 210
	INC
	.loc ../contracts/BatchExecutor.tsol, 0
}
WHILE
DROP
.loc ../contracts/BatchExecutor.tsol, 214
DUP
ROT
LESS
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 215
	DUP2
	UFITS 32
	PUSH3 S4, S5, S6
	MYADDR
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	STSLICECONST x1_
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 5
	NEWC
	STSLICECONST x2acbb8af
	STU 16
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	STU 256
	STU 32
	STSLICE
	STBREFR
	ENDC
	PUSHPOW2 7
}
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 222
	OVER
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHPOW2 7
	ADDCONST 2
	UFITS 8
}
IFELSE
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 0
BLKDROP 5

.globl	_everWalletDeployInternal_9fc93571_internal
.type	_everWalletDeployInternal_9fc93571_internal, @function
CALL $_everWalletDeployInternal_9fc93571_internal_macro$

.macro _everWalletDeployInternal_9fc93571_internal_macro
.loc ../contracts/BatchExecutor.tsol, 235
OVER
SECOND
OVER
NEWC
STU 256
STU 64
ENDC
.loc ../contracts/BatchExecutor.tsol, 237
GETGLOB 15
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
.loc ../contracts/BatchExecutor.tsol, 238
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
.loc ../contracts/BatchExecutor.tsol, 240
PUSH S3
FIRST
OVER
NEWC
STSLICECONST x42_
STSLICE
SWAP
STGRAMS
PUSHINT 3
STUR 107
ROT
DUP
CALLREF {
	CTOS
	LDI 1
	SWAP
	PUSHCONT {
		LDI 5
		NIP
	}
	IF
	LDI 1
	SWAP
	PUSHCONT {
		LDI 2
		NIP
	}
	IF
	LDOPTREF
	LDOPTREF
	LDDICT
	ENDS
	BLKDROP 3
}
STREFR
STSLICECONST 0
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 247
ROT
SECOND
XCHG S3
PUSHSLICE xc0000000000000000000000001
NEWC
STSLICE
ROLLREV 4
NEWC
STSLICECONST x7f2b7721
STU 16
STSLICE
STU 256
STU 64
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 0

.macro batchMint
DROP
GETGLOB 6
THROWIFNOT 76
.loc ../contracts/BatchExecutor.tsol, 252
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 128
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 32
LDREF
ENDS
CTOS
LDMSGADDR
ENDS
.loc ../contracts/BatchExecutor.tsol, 0
CALLREF {
	CALL $batchMint_90a58274_internal_macro$
}
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro batchMint_90a58274_internal_macro
.loc ../contracts/BatchExecutor.tsol, 34
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/BatchExecutor.tsol, 259
PUSH S2
FIRST
UFITS 32
PUSH S5
PUSHSLICE xc00000000000000000000000001e67f434
NEWC
STSLICE
STSLICE
STU 32
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 261
ROLLREV 4
XCHG S3
FALSE
NEWC
STSLICECONST x6_
STI 1
STSLICECONST x1_
STSLICE
PUSHINT 1
STUR 111
ROLLREV 4
NEWC
STSLICECONST x49577d6f
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
STU 128
STU 32
STSLICE
STBREFR
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 0

.macro batchPairDeploy
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/BatchExecutor.tsol, 281
OVER
PUSHCONT {
	LDU 16
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 16
}
IFELSE
LDMSGADDR
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 32
LDREF
ENDS
CTOS
LDMSGADDR
ENDS
.loc ../contracts/BatchExecutor.tsol, 0
CALLREF {
	CALL $batchPairDeploy_633fc1ec_internal_macro$
}
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro batchPairDeploy_633fc1ec_internal_macro
.loc ../contracts/BatchExecutor.tsol, 34
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/BatchExecutor.tsol, 288
PUSH S2
FIRST
.loc ../contracts/BatchExecutor.tsol, 289
PUSH S2
ADDCONST 20
UFITS 32
OVER
MIN
.loc ../contracts/BatchExecutor.tsol, 291
ROLL 3
PUSHCONT {
	PUSH2 S0, S1
	LESS
}
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 292
	BLKPUSH 2, 6
	PUSH2 S2, S6
	SECOND
	PUSHINT 32
	DICTUGETREF
	THROWIFNOT 50
	CTOS
	CALLREF {
		LDMSGADDR
		LDREF
		ENDS
		CTOS
		LDMSGADDR
		ENDS
		PAIR
	}
	PUSH S6
	CALLREF {
		CALL $_pairDeployInternal_59d6552d_internal_macro$
	}
	.loc ../contracts/BatchExecutor.tsol, 291
	INC
	.loc ../contracts/BatchExecutor.tsol, 0
}
WHILE
DROP
.loc ../contracts/BatchExecutor.tsol, 295
DUP
ROT
LESS
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 296
	DUP2
	UFITS 32
	PUSH3 S4, S5, S6
	MYADDR
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	STSLICECONST x1_
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 5
	NEWC
	STSLICECONST x502b0d2c
	STU 16
	STSLICE
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	STU 32
	SWAP
	NEWC
	STSLICE
	STBREFR
	STBREFR
	ENDC
	PUSHPOW2 7
}
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 303
	OVER
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHPOW2 7
	ADDCONST 2
	UFITS 8
}
IFELSE
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 0
BLKDROP 5

.globl	_pairDeployInternal_59d6552d_internal
.type	_pairDeployInternal_59d6552d_internal, @function
CALL $_pairDeployInternal_59d6552d_internal_macro$

.macro _pairDeployInternal_59d6552d_internal_macro
.loc ../contracts/BatchExecutor.tsol, 317
OVER
SECOND
PUSH S2
FIRST
PUSH S4
FALSE
NEWC
STSLICECONST x6_
STI 1
STSLICECONST x1_
STSLICE
PUSHINT 894463697093663126112302401060256380239216641
STUR 151
ROLLREV 3
NEWC
STSLICECONST x6a45f967
STSLICE
ROTREV
NEWC
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 324
PUSHINT 0
NEWC
STU 256
PUSHINT 0
NEWDICT
PUSHINT 64
DICTUSETB
ROT
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
NEWC
STSLICECONST x02
PUSHINT 2
ROT
PUSHINT 64
DICTUSETB
OVER
SECOND
PUSH S2
FIRST
PUSHINT 0
NEWDICT
PUSHINT 2
PUSHCONT {
	ROT
	PUSH S2
	INC
	XCHG S3
	ROT
	PUSHINT 32
	DICTUSET
}
REPEAT
PAIR
CALLREF {
	CALL $_buildPairParams_623f79c1_internal_macro$
}
PUSHINT 3
ROT
PUSHINT 64
DICTUSETREF
NEWC
STDICT
ENDC
GETGLOB 18
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
.loc ../contracts/BatchExecutor.tsol, 339
OVER
SECOND
ROT
FIRST
SWAP2
SWAP
PUSHSLICE xc0000000000000000000000001
NEWC
STSLICE
ROLLREV 4
NEWC
STSLICECONST x06c6bfe1
STU 16
STSLICE
ROTREV
NEWC
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/BatchExecutor.tsol, 0

.globl	_buildPairParams_623f79c1_internal
.type	_buildPairParams_623f79c1_internal, @function
CALL $_buildPairParams_623f79c1_internal_macro$

.macro _buildPairParams_623f79c1_internal_macro
.loc ../contracts/BatchExecutor.tsol, 343
NEWDICT
.loc ../contracts/BatchExecutor.tsol, 345
SWAP
SECOND
PUSHINT 0
NULL
PUSHCONT {
	PUSH2 S1, S2
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	DROP
	DUP
	POP S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 346
	PUSH2 S0, S3
	PUSHINT 267
	DICTGET
	NULLSWAPIFNOT
	NIP
	THROWIF 153
	.loc ../contracts/BatchExecutor.tsol, 347
	PUSH2 S0, S3
	NEWC
	STSLICECONST x00
	ROTREV
	PUSHINT 267
	DICTSETB
	POP S4
	.loc ../contracts/BatchExecutor.tsol, 0
	OVER
	INC
	POP S2
}
WHILE
BLKDROP 3
.loc ../contracts/BatchExecutor.tsol, 350
NEWC
.loc ../contracts/BatchExecutor.tsol, 352
XCPU S1, S0
PUSHINT 267
DICTMIN
PUSHCONT {
	DUP
	ROT
	PLDU 8
}
PUSHCONT {
	NULL
	BLKPUSH 2, 0
}
IFELSE
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc ../contracts/BatchExecutor.tsol, 353
	PUSH2 S1, S4
	STSLICE
	POP S5
	.loc ../contracts/BatchExecutor.tsol, 0
	PUSH2 S2, S3
	PUSHINT 267
	DICTGETNEXT
	PUSHCONT {
		DUP
		ROT
		PLDU 8
	}
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
	IFELSE
	BLKDROP2 3, 3
}
WHILE
BLKDROP 4
.loc ../contracts/BatchExecutor.tsol, 356
ENDC
.loc ../contracts/BatchExecutor.tsol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDU 64
LDREF
LDREF
LDREF
LDU 256
LDREF
ENDS
CTOS
LDREF
LDREF
LDREF
LDREF
ENDS
CTOS
LDREF
LDREF
LDREF
LDREF
ENDS
CTOS
LDREF
LDREF
ENDS
SETGLOB 22
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 1
	OVER
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 64
	}
	IF
	PUSHREF {
	}
	BLKPUSH 2, 0
	PUSHINT 0
	PUSHREF {
	}
	BLKPUSH 7, 0
	SETGLOB 22
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0
	SETGLOB 14
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 22
GETGLOB 21
GETGLOB 20
GETGLOB 19
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STU 64
STREF
STREF
STREF
STU 256
ROLLREV 8
NEWC
STREF
STREF
STREF
ROLLREV 5
NEWC
STREF
STREF
STREF
ROTREV
NEWC
STREF
STREF
STBREFR
STBREFR
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
PLDU 4
MODPOW2 1
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
IF
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro public_function_selector
DUP
PUSHINT 1344998700
LEQ
IFJMPREF {
	DUP
	PUSHINT 406428817
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 717994159
	EQUAL
	IFJMPREF {
		CALL $batchEverWalletDeploy$
	}
	DUP
	PUSHINT 1290773560
	EQUAL
	IFJMPREF {
		CALL $deployDex$
	}
	DUP
	PUSHINT 1344998700
	EQUAL
	IFJMPREF {
		CALL $batchPairDeploy$
	}
}
DUP
PUSHINT 1728792980
LEQ
IFJMPREF {
	DUP
	PUSHINT 1527307521
	EQUAL
	IFJMPREF {
		CALL $batchMint$
	}
	DUP
	PUSHINT 1728792980
	EQUAL
	IFJMPREF {
		CALL $batchTokenRootDeploy$
	}
}

